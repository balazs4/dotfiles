# .vmware

export N_PREFIX=$HOME/.n/prefix
export PATH=$HOME/.n/:$N_PREFIX/bin/:$HOME/.gem/ruby/2.7.0/bin:${PATH}
export RUBYOPT="-W0"  # ruby warnings

alias spotify='google-chrome-stable --app=https://open.spotify.com/' #webapp
alias youtube='chromium --app=https://youtube.com/' #webapp
alias whatsapp='chromium --app=https://web.whatsapp.com/' #webapp
alias p5="docker-compose --file $HOME/git/plossys-bundle/docker-compose.yml"
alias infra="GH_REPO=sealsystems/com-infrastructure gh"
alias outlook='chromium --app=https://outlook.office365.com/mail/inbox' #webapp
alias teams='chromium --app="https://teams.microsoft.com/_#/conversations/General?threadId=19:1e2f67587cad457580ed4b3908f67431@thread.tacv2&ctx=channel"' #webapp
alias slack='chromium --app="$SLACK_URL"' #webapp
alias mongodb-rs='docker run --rm -p "27017:27017" ghcr.io/sealsystems/mongodb-rs:3.6.17'

function npmrc(){
  if [[ $1 = 'current' ]]
  then
    cat ~/.npmrc | grep registry= | cut -f3 -d"/"
  else
    NPMRC_SUFFIX=${1:-`find $HOME -maxdepth 1 -name '.npmrc.*' | fzf --preview 'cat {}' | cut -d "." -f3`}
    cp -f ~/.npmrc ~/.npmrc.prev
    cp -f ~/.npmrc.$NPMRC_SUFFIX ~/.npmrc
    NPM_CONFIG_LOGLEVEL=silent npm cache clean -f
  fi
}

function checkin() {
  npm run --silent --prefix=$HOME/src/timesheet checkin `date -d "${*:-0 minutes ago}" -u "+%Y-%m-%dT%TZ"`
  git -C $HOME/src/timesheet commit -am '☕ checkin'
  git -C $HOME/src/timesheet push --no-verify
}

function checkout(){
  npm run --silent --prefix=$HOME/src/timesheet checkout `date -d "${*:-0 minutes ago}" -u "+%Y-%m-%dT%TZ"`
  git -C $HOME/src/timesheet commit -am '🍺 checkout'
  git -C $HOME/src/timesheet push --no-verify
}

function bcs() {
  npm run --silent --prefix=$HOME/src/timesheet start \
    | fx 'x => Object.entries(x).map(([day,duration]) => `${day}\t${duration}`).join("\n")' \
    | fzf --layout=reverse
}

function fa(){
  npm run --silent --prefix=$HOME/src/timesheet start \
    | fx 'x => Object.entries(x).map(([day,duration]) => `${day}\t${duration}`).join("\n")' \
    | sort \
    | tail -1 \
    | cut -f2
}

function jira-md(){
  curl -u "`pass seal/jira`" -is "$JIRA_URL/jira/rest/api/2/search?jql=key=$1" | alola | fx jira 
}

function jira(){
  jira-md $1 | glow -
}

function rapid(){
  curl -u "`pass seal/jira`" -is "$JIRA_URL/jira/rest/greenhopper/1.0/xboard/work/allData.json?rapidViewId=$1" | alola | fx rapid
}

function sprint(){
  rapid 131 | fzf -q "'bv" --preview 'echo {} | cut -f1 | xargs -Iid zsh -c "source ~/.zshrc; jira id"'
}

function seal(){
  case "$1" in
    list)
      curl -H 'Cache-Control: no-cache' -s "https://$GITHUB_TOKEN@raw.githubusercontent.com/sealsystems/seal-parrot/master/betonieren.md" | sed 's/- //'
      ;;
    latest)
      curl -H 'Cache-Control: no-cache' -s "https://$GITHUB_TOKEN@raw.githubusercontent.com/sealsystems/seal-parrot/master/betonieren.md" | sed 's/- //' | tail -1 
      ;;
    *)
      curl -H 'Cache-Control: no-cache' -s "https://$GITHUB_TOKEN@raw.githubusercontent.com/sealsystems/seal-parrot/master/betonieren.md" | sed 's/- //' | shuf -n1 
      ;;
  esac
}

function q() {
  docker-compose --file $HOME/git/plossys-bundle/docker-compose.yml exec db mongo --ssl --sslAllowInvalidCertificates spooler-$1 --eval "db.$1.find($2)" \
    | sed '0,/server version/d'
}
