git_protocol: ssh
aliases:
  checks: >-
    !fn(){
      while gh pr checks 2>&1 | grep 'no checks reported'; do sleep 2; done
      gh pr checks --watch --interval ${GH_INTERVAL:-10}
      gh pr checks | grep fail | xurls | awk -F'/' '/github.com/ {print $NF}' | xargs -I{} gh run view --log-failed --job {}
    }; fn

  prs: >-
    !gh api graphql -f query="
        {
          search(query: \"type:pr state:open ${1:-author}:${USER}\", type: ISSUE, first: 10) {
            edges {
              node {
                ... on PullRequest {
                  title url createdAt
                  reviews(first: 20){ nodes{ author{ ... on User{ login } } state } }
                  author{ ... on User{ login } }
                }
              }
            }
          }
        }" \
        | fx 'x => x.data.search.edges.map(xx => [xx.node.createdAt, xx.node.url ,JSON.stringify(xx.node.reviews.nodes.reduce((acc,xxx) => {  acc[xxx.state] = 1 + (acc[xxx.state] || 0); return acc; }, {})), xx.node.title].join("\t")).join("\n")' \
        | fzf --reverse --height='32%' \
        | xurls \
        | xargs xdg-open
