git_protocol: ssh
aliases:
  watch: >-
    !fn(){
      branch=`git rev-parse --abbrev-ref HEAD`
      id=`gh run list | grep $branch | grep in_progress | head -1 | cut -f8` 
      [[ -z $id ]] && return
      gh run watch $id
      outcome=`gh run list | grep $id | cut -f2`
      color=`echo $outcome | sed -r 's/\s//g;s/success/A3BE8C/g;s/failure/BF616A/g'`
      [[ -f /tmp/github-action-$color.svg ]] || `curl -Lks https://cdn.svgporn.com/logos/github-icon.svg | sed "s/#161614/#${color:-161614}/g" > /tmp/github-action-$color.svg`
      dunstify -I /tmp/github-action-$color.svg "$outcome" "$branch\n`git config --get remote.origin.url | cut -f2 -d':'`"
      gh run view $id --log-failed
    }; fn

  review: >-
    !gh api graphql -f query="
        {
          search(query: \"type:pr state:open review-requested:${1:-$USER}\", type: ISSUE, first: 100) {
            edges {
              node {
                ... on PullRequest {
                  title
                  url
                  updatedAt
                }
              }
            }
          }
        }
    " | npx -q fx 'x => x.data.search.edges.map(xx=> [xx.node.updatedAt, xx.node.url, xx.node.title].join("\t")).join("\n")' | sort -r

  author: >-
    !gh api graphql -f query="
        {
          search(query: \"type:pr state:open author:${1:-$USER}\", type: ISSUE, first: 100) {
            edges {
              node {
                ... on PullRequest {
                  title
                  url
                  updatedAt
                  reviews(first: 20){
                   nodes{
                     author{
                       ... on User{
                         login
                       }
                     }
                     state
                   }
                  }
                }
              }
            }
          }
        }
        " | npx -q fx 'x => x.data.search.edges.map(xx=> [xx.node.updatedAt, xx.node.url, xx.node.title, xx.node.reviews.nodes.map(xxx => `${xxx.state} by ${xxx.author.login}`).join(",")].join("\t")).join("\n")' | sort -r
